// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using UFRCards.Data;

#nullable disable

namespace UFRCards.Data.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20221101190759_AddedGameRooms")]
    partial class AddedGameRooms
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("UFRCards.Data.Entities.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AnswerText")
                        .HasColumnType("text");

                    b.Property<int>("Category")
                        .HasColumnType("integer");

                    b.Property<int?>("PlayerId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("UFRCards.Data.Entities.GameRoom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("GameRooms");
                });

            modelBuilder.Entity("UFRCards.Data.Entities.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("GameRoomId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("Score")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GameRoomId");

                    b.ToTable("Player");
                });

            modelBuilder.Entity("UFRCards.Data.Entities.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Category")
                        .HasColumnType("integer");

                    b.Property<int?>("GameRoomId")
                        .HasColumnType("integer");

                    b.Property<string>("QuestionText")
                        .HasColumnType("text");

                    b.Property<int>("QuestionType")
                        .HasColumnType("integer");

                    b.Property<int>("SlotsCount")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GameRoomId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("UFRCards.Data.Entities.Answer", b =>
                {
                    b.HasOne("UFRCards.Data.Entities.Player", null)
                        .WithMany("Answers")
                        .HasForeignKey("PlayerId");
                });

            modelBuilder.Entity("UFRCards.Data.Entities.GameRoom", b =>
                {
                    b.OwnsOne("UFRCards.Data.Entities.GameRoomSettings", "GameRoomSettings", b1 =>
                        {
                            b1.Property<int>("GameRoomId")
                                .HasColumnType("integer");

                            b1.Property<int>("MaxRounds")
                                .HasColumnType("integer");

                            b1.Property<int>("RoundsPassed")
                                .HasColumnType("integer");

                            b1.Property<int>("UsersCount")
                                .HasColumnType("integer");

                            b1.HasKey("GameRoomId");

                            b1.ToTable("GameRooms");

                            b1.WithOwner()
                                .HasForeignKey("GameRoomId");
                        });

                    b.Navigation("GameRoomSettings");
                });

            modelBuilder.Entity("UFRCards.Data.Entities.Player", b =>
                {
                    b.HasOne("UFRCards.Data.Entities.GameRoom", "GameRoom")
                        .WithMany("Players")
                        .HasForeignKey("GameRoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GameRoom");
                });

            modelBuilder.Entity("UFRCards.Data.Entities.Question", b =>
                {
                    b.HasOne("UFRCards.Data.Entities.GameRoom", null)
                        .WithMany("Questions")
                        .HasForeignKey("GameRoomId");
                });

            modelBuilder.Entity("UFRCards.Data.Entities.GameRoom", b =>
                {
                    b.Navigation("Players");

                    b.Navigation("Questions");
                });

            modelBuilder.Entity("UFRCards.Data.Entities.Player", b =>
                {
                    b.Navigation("Answers");
                });
#pragma warning restore 612, 618
        }
    }
}
